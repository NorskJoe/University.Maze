s3542413 - Joseph Johnson

Compiling:
 - source /opt/rh/devtoolset-4/enable must be entered into the command line before compiling

 - to compile, type 'make'.  This compiles with the debugging flags required for running the program in dbg

 - to clean the directory of compiled files and the executable, type 'make clean'

 - the executable file created by compiling is called 'maze'

 - to run the executable type ./maze into the command line, followed by the appropriate flags


Flags:
 - --g: tells the program to generate a maze using the aldous-broder algorithm

 - --g can be followed by the optinal commands of <seed> <width> <height>

 - if seed is entered, width and height are optional

 - if seed is not entered, you cannot specify width and height.  The maze size will default to 10x10, this also happens if a seed is not entered

 - --lb: tells the program to generate a maze from a binary file.  The binary file must have a .maze file extension.  The filename must follow the --lb flag

 - --sb: tells the program to save the maze information in a binary file with a .maze file extension.  The filename must be specified after the --sb flag

 - --sv: tells the program to save the maze to a svg file with a .svg file extension.  THe filename must be specified after the --sv flag.


Program Usage:
 - --g OR --lb generation options must be used, they cannot be used in conjunction.

 - --sb AND/OR --sv saving options must be used.  At least one or both needs to be chosen.

 - the order of flags should be <generation option> followed by <saving option>

 - binary files must have the file extension .maze


Seeding:
- if the user enters a <seed> option, that is used to generate the maze.

- if the user enters the same seed again, with width and height attributes also being equal, the exact same maze will be produced.

- if no seed is entered by the user, a seed will be created based on the current time.  In this case, mazes generated at different times will always be different.

- when a seed is generated by the current time, it will be displayed to the user.  The seed displayed can be entered by the user to create an identical maze at any other time


Unresolved errors:
- a segmentation fault (core dump) occurs when the program is run with the 'badWidthHeight2.maze' example binary file provided on google drive.  I am unsure as to why this error occurs.


Program Development:
(1): I first created a class diagram based on the functionality required

(2): I then created the 'skeleton code' based on this class diagram, adding classes and empty functions that I thought would be required

(3): I started implementing the loading and saving of binary files first.  Only reading and saving data, but not doing anything with it.

(4): I then filled out the Maze class so that I could create a maze based on the binary information read in.

(5): Once the binary files and Maze class was fully functioning, I implemented saving the maze to an svg file

(6): I then implemented the seeding and maze generation functions.  I had to make some changes to the Maze class in order for maze generation to work properly

(7): Once all of the main functionality was complete, I made another class diagram based on what I thought could be improved and refactored.

(8): I then refactored the code, moving seperate file saving files into one class called FileHandler

(9): I then did a final refactoring of the code


Other Notes:
 - I did most of my compiling and testing on my home computer running Ubuntu 16.04.  I tested it on the RMIT servers once all functionality was complete, there were some minor errors which had to be fixed.

 - My first and my final version of my class diagram are included in my submission

 - I tested my maze generation algorithm on mazes up to 1000x1000